#ifndef RPCSERIALIZERBASE_H
#define RPCSERIALIZERBASE_H

#include <QtCore/QObject>
#include <QtCore/qglobal.h>

#include <QVariant>

class QByteArray;
class RpcSerializerBase : public QObject
{
    Q_OBJECT
    Q_PROPERTY(QString validateToken READ validateToken WRITE setValidateToken NOTIFY validateTokenChanged)

    QString m_validateToken;

public:
    explicit RpcSerializerBase(QObject *parent = 0);

    virtual QVariantMap createRequest(
            qlonglong id,
            QString sender,
            QString methodName,
            QString packetType,
            QVariant val0 = QVariant(),
            QVariant val1 = QVariant(),
            QVariant val2 = QVariant(),
            QVariant val3 = QVariant(),
            QVariant val4 = QVariant(),
            QVariant val5 = QVariant(),
            QVariant val6 = QVariant(),
            QVariant val7 = QVariant(),
            QVariant val8 = QVariant(),
            QVariant val9 = QVariant()) = 0;

    virtual QByteArray serialize(const QVariantMap &map) = 0;
    virtual QVariantList deserialize(const QByteArray &array) = 0;
    QString validateToken() const;

signals:

    void validateTokenChanged(QString validateToken);

public slots:
    void setValidateToken(QString validateToken);
protected:
    void addValidateToken(QVariantMap *map);
    bool checkValidateToken(QVariantMap *map);
    QString MD5(QString text);
    QString MD5(QByteArray text);
};

#endif // RPCSERIALIZERBASE_H
