
//-----------------------------------------
// Methods for %NAME%
//-----------------------------------------

void %CLASS_NAME%::%NAME%Slot(%SIGN%)
{
    emit %NAME%Handle(%SIGN_NAME%);
}

%TYPE% %CLASS_NAME%::%NAME%Async(%SIGN%)
{
    qlonglong id = invokeOnPeer("%NAME%Slot"%SEP%%SIGN_NAME%);

    if(id){
        RemoteCallBase *call = new RemoteCallBase(RemoteCallBase::EventLoop);
        addCall(id, call);
    }
}

%TYPE% %CLASS_NAME%::%NAME%(%SIGN%)
{
    qlonglong id = invokeOnPeer("%NAME%Slot"%SEP%%SIGN_NAME%);

    if(id){
		RemoteCallBase *call = new RemoteCallBase(RemoteCallBase::EventLoop);
        addCall(id, call);
		call->eventLoop->exec();
        removeCall(id);
		delete call;
    }
}

#if __cplusplus >= 201103L
void %CLASS_NAME%::%NAME%(%SIGN%%SEP%std::function<void()> func)
{
    qlonglong id = invokeOnPeer("%NAME%Slot"%SEP%%SIGN_NAME%);

    if(id){
        RemoteCallBase *call = new RemoteCallBase(func);
        addCall(id, call);
    }
}
#endif

void %CLASS_NAME%::%NAME%(%SIGN%%SEP%const QObject *obj, char *slotName)
{
    qlonglong id = invokeOnPeer("%NAME%Slot"%SEP%%SIGN_NAME%);

    if(id){
        RemoteCallBase *call = new RemoteCallBase(const_cast<QObject *>(obj), slotName);
        addCall(id, call);
    }
}

void %CLASS_NAME%::%NAME%(%SIGN%%SEP%const QObject *obj, const QMetaMethod *method)
{
    qlonglong id = invokeOnPeer("%NAME%Slot"%SEP%%SIGN_NAME%);

    if(id){
        QObject *target = const_cast<QObject *>(obj);
        RemoteCallBase *call = new RemoteCallBase(const_cast<QObject *>(obj),
                                                  const_cast<QMetaMethod *>(method));
        addCall(id, call);
    }
}
