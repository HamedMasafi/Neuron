#include "clientwindow.h"

#include "user.h"
#include "server.h"

#include "defines.h"

#include <QFileDialog>
#include <QKeyEvent>
#include <QMessageBox>

ClientWindow::ClientWindow(QWidget *parent) :
    QMainWindow(parent)
{
    setupUi(this);
    me = new User();

    RpcHub *hub = new RpcHub(this);
    hub->setAutoReconnect(true);
    hub->setValidateToken(RPC_TOKEN);

    Server *server = new Server(this);
//    hub->addSharedObject(me);
//    hub->addSharedObject(server);
    me->setHub(hub);
    server->setHub(hub);

    connect(hub, &RpcHub::isConnectedChanged, this, [this] (bool isConnected) {
        if(isConnected)
            statusBar()->showMessage("Connected");
        else
            statusBar()->showMessage("Disonnected");
    });

    connect(server, &Server::broadcastMessageHandle, this, [this] (QString message) {
        QMessageBox::information(this, "Broadcast", message);
    });

    connect(me, &User::messageRecivedHandle, this, [this] (QString username, QString message) {

        textEdit->append(QString("<b><font color=%3>%1 :</font></b> %2")
                         .arg(username)
                         .arg(message)
                         .arg(username == me->username() ? "red" : "blue"));
    });

    connect(me, &User::roomMessageHandle, this, [this] (QString message) {

        textEdit->append(QString("<p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">"
                                 "<span style=\" font-weight:600; color:#aa0000;\">%1</span></p>")
                         .arg(message));
    });
}

void ClientWindow::changeEvent(QEvent *e)
{
    QMainWindow::changeEvent(e);
    switch (e->type()) {
    case QEvent::LanguageChange:
        retranslateUi(this);
        break;
    default:
        break;
    }
}

void ClientWindow::keyPressEvent(QKeyEvent *e)
{
    if(textEditMessage->hasFocus() && e->key() == Qt::Key_Return)
        on_pushButtonSend_clicked();
}

void ClientWindow::on_pushButtonLogin_clicked()
{

    me->connectToServer(lineEditServer->text(), spinBoxPort->value());

    me->setUsername(lineEditUsername->text());
    labelUsername->setText(me->username());
    stackedWidget->setCurrentIndex(1);
}

void ClientWindow::on_pushButtonSend_clicked()
{
    me->sendMessageAsync(textEditMessage->toPlainText());
    textEditMessage->setPlainText("");
}

void ClientWindow::on_pushButtonChangeAvator_clicked()
{
    QString fileName = QFileDialog::getOpenFileName(this, tr("Open File"),
                                                    "/home",
                                                    tr("Images (*.png *.xpm *.jpg)"));

    if(!fileName.isNull()){
        QPixmap pixmap(fileName);
        if(!pixmap.isNull()){
            me->setAvator(pixmap);
            labelAvator->setPixmap(pixmap);
        }
    }
}
